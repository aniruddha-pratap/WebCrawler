{"version":3,"sources":["../server/app.js"],"names":["app","port","set","path","join","__dirname","use","express","json","urlencoded","extended","static","indexRouter","req","res","next","err","locals","message","error","get","status","send","server","http","createServer","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAIA,MAAM,wBAAV;;AAEA,IAAMC,OAAO,MAAb;;AAEAD,IAAIE,GAAJ,CAAQ,MAAR,EAAgBD,IAAhB;;AAEA;AACAD,IAAIE,GAAJ,CAAQ,OAAR,EAAiBC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAL,IAAIE,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEAF,IAAIM,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAN,IAAIM,GAAJ,CAAQC,kBAAQC,IAAR,EAAR;AACAR,IAAIM,GAAJ,CAAQC,kBAAQE,UAAR,CAAmB,EAAEC,UAAU,KAAZ,EAAnB,CAAR;AACAV,IAAIM,GAAJ,CAAQ,6BAAR;AACAN,IAAIM,GAAJ,CAAQC,kBAAQI,MAAR,CAAeR,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEAL,IAAIM,GAAJ,CAAQ,QAAR,EAAkBM,eAAlB;;AAEA;AACAZ,IAAIM,GAAJ,CAAQ,UAACO,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBA,SAAK,0BAAY,GAAZ,CAAL;AACH,CAFD;;AAIA;AACAf,IAAIM,GAAJ,CAAQ,UAACU,GAAD,EAAMH,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC7B;AACAD,QAAIG,MAAJ,CAAWC,OAAX,GAAqBF,IAAIE,OAAzB;AACAJ,QAAIG,MAAJ,CAAWE,KAAX,GAAmBN,IAAIb,GAAJ,CAAQoB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE;;AAEA;AACAF,QAAIO,MAAJ,CAAWL,IAAIK,MAAJ,IAAc,GAAzB;AACAP,QAAIQ,IAAJ,CAASN,GAAT;AACH,CARD;;AAUA;;;;AAIA,IAAMO,SAASC,eAAKC,YAAL,CAAkBzB,GAAlB,CAAf;;AAEA;;;;AAIAuB,OAAOG,MAAP,CAAczB,IAAd","file":"app.js","sourcesContent":["import createError from 'http-errors';\nimport express from 'express';\nimport path from 'path';\nimport cookieParser from 'cookie-parser';\nimport logger from 'morgan';\nimport http from 'http';\n\nimport indexRouter from './routes/index';\n\nlet app = express();\n\nconst port = '3000';\n\napp.set('port', port);\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/crawl', indexRouter);\n\n// catch 404 and forward to error handler\napp.use((req, res, next) => {\n    next(createError(404));\n});\n\n// error handler\napp.use((err, req, res, next) => {\n    // set locals, only providing error in development\n    res.locals.message = err.message;\n    res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n    // render the error page\n    res.status(err.status || 500);\n    res.send(err);\n});\n\n/**\n * Create HTTP server.\n */\n\nconst server = http.createServer(app);\n\n/**\n * Listen on provided port.\n */\n\nserver.listen(port);\n\n"]}